import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState } from "react";

interface IEditItemProps {
  user: {
    id: string;
    name: string;
    email: string;
    surname: string;
  };
}

export async function getServerSideProps(context: { params: { id: string } }) {
  const res = await fetch(
    `http://localhost:${process.env.NEXT_PUBLIC_PORT}/get-user?id=${context.params.id}`
  );

  const data = await res.json();

  console.log(data);

  return data
    ? {
        props: {
          user: data,
        },
      }
    : { notFound: true, revalidate: 10 };
}

const EditItem: NextPage<IEditItemProps> = ({ user }) => {
  const router = useRouter();

  const [name, setName] = useState(user.name || "");
  const [surname, setSurname] = useState(user.surname || "");
  const [email, setEmail] = useState(user.email || "");

  const editUser = async () => {
    const res = await fetch(
      `http://localhost:${process.env.NEXT_PUBLIC_PORT}/edit-item`,
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          id: user.id,
          name,
          surname,
          email,
        }),
      }
    );

    await res.json();

    router.push("/");
  };

  return (
    <>
      <Head>
        <title>Users 1</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Edit user
          </h1>

          <form
            onSubmit={(e) => {
              e.preventDefault();
              e.stopPropagation();
              editUser();
            }}
            className="w-full space-y-2 rounded-xl bg-white/10 bg-white/10 p-4 text-white"
          >
            <div>
              <label>Name</label>
              <input
                value={name}
                required
                onChange={({ target: { value } }) => setName(value)}
                className="input w-full px-4 py-2 text-black "
                type="text"
              />
            </div>
            <div>
              <label>Surname</label>
              <input
                value={surname}
                required
                onChange={({ target: { value } }) => setSurname(value)}
                className="input w-full px-4 py-2 text-black"
                type="text"
              />
            </div>
            <div>
              <label>Email</label>
              <input
                value={email}
                required
                onChange={({ target: { value } }) => setEmail(value)}
                className="input w-full px-4 py-2 text-black"
                type="email"
              />
            </div>

            <button className="w-full rounded bg-blue-500 py-2 px-4 font-bold text-white hover:bg-blue-700">
              Edit
            </button>
          </form>
        </div>
      </main>
    </>
  );
};

export default EditItem;
